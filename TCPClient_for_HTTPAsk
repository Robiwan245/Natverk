package tcpclient;
import java.net.*;
import java.io.*;

public class TCPClient {

private static int BUFFERSIZE=20000;

    public static String askServer(String hostname, int port, String ToServer) throws  IOException {

      byte[] fromUserBuffer = new byte[BUFFERSIZE];
      byte[] fromServerBuffer = new byte[BUFFERSIZE];

      if (ToServer == null) {
        String serverOutput = TCPClient.askServer(hostname, port);
        return serverOutput;
      }
      else {
         fromUserBuffer = ToServer.getBytes();
      }

      try {
      Socket socket = new Socket(hostname, port);

      socket.getOutputStream().write(fromUserBuffer);
      socket.getOutputStream().write('\n');

      StringBuilder builder = new StringBuilder();

      socket.setSoTimeout(1000);

      try {

          int fromServerLength = socket.getInputStream().read(fromServerBuffer);

      for (int i = 0; i < fromServerLength; i++) {
        builder.append((char)fromServerBuffer[i]);
        }
      } catch(Exception SocketTimeoutException) {
        }

      String output = builder.toString();
      socket.close();

      return output;
    }
    catch (Exception SocketException) {
      String output = null;
      return output;
    }
  }

    public static String askServer(String hostname, int port) throws  IOException {

      byte[] fromUserBuffer = new byte[BUFFERSIZE];
      byte[] fromServerBuffer = new byte[BUFFERSIZE];

      try {

      Socket socket = new Socket(hostname, port);

      StringBuilder builder = new StringBuilder();

      socket.setSoTimeout(1000);

      try {

        int fromServerLength = socket.getInputStream().read(fromServerBuffer);

      for (int i = 0; i < fromServerLength; i++) {
        builder.append((char)fromServerBuffer[i]);
        }
      } catch(Exception SocketTimeoutException) {
        }

      String output = builder.toString();
      socket.close();

      return output;
    }

  catch (Exception SocketException) {
    String output = null;
    return output;
  }
}
}
